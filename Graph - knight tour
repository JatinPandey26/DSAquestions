import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sn = new Scanner(System.in);
        int n = sn.nextInt();
        int row = sn.nextInt();
        int col = sn.nextInt();
        
        int[][] chess = new int[n][n];
        boolean[][] visited = new boolean[n][n];
        printKnightsTour(chess,row,col,1,visited);
        
    }

    public static void printKnightsTour(int[][] chess, int row, int col, int upcomingMove , boolean[][] visited) {
        
        if(row < 0 || col < 0 || row >= chess.length || col >= chess[0].length || chess[row][col] != 0){
            return;
        }
        
        if(upcomingMove == chess.length*chess.length){
           chess[row][col] = upcomingMove;
            displayBoard(chess);
            chess[row][col] = 0;
            
            return;
        }
        
        visited[row][col] = true;  
        chess[row][col] = upcomingMove;
       printKnightsTour(chess,row-2,col+1,upcomingMove+1,visited);
       printKnightsTour(chess,row-1,col+2,upcomingMove+1,visited);
       printKnightsTour(chess,row+1,col+2,upcomingMove+1,visited);
       printKnightsTour(chess,row+2,col+1,upcomingMove+1,visited);
       printKnightsTour(chess,row+2,col-1,upcomingMove+1,visited);
       printKnightsTour(chess,row+1,col-2,upcomingMove+1,visited);
       printKnightsTour(chess,row-1,col-2,upcomingMove+1,visited);
       printKnightsTour(chess,row-2,col-1,upcomingMove+1,visited);
       chess[row][col] = 0;
        visited[row][col] = false;   
        
        
    }

    public static void displayBoard(int[][] chess){
        for(int i = 0; i < chess.length; i++){
            for(int j = 0; j < chess[0].length; j++){
                System.out.print(chess[i][j] + " ");
            }
            System.out.println();
        }

        System.out.println();
    }
}
