 //Function to find the length of longest common subsequence in two strings.
    
  
   static int[][] t ;
    static int lcs(int x, int y, String s1, String s2)
    {
          t = new int[x+1][y+1];
        //   for(int[] a : t){
        //       Arrays.fill(a,-1);
        //   }
          
        //  return lcsHelperRecMem(x,y,s1,s2);
         lcsHelperTtoD(x,y,s1,s2);
        int i = x ;
        int j = y;
        String ans = "";
        while(i > 0 && j > 0){
            if(s1.charAt(i-1) == s2.charAt(j-1) ){
             ans = s1.charAt(i-1) + ans;   
             i--; 
             j--;
        }
        else{
            if(t[i-1][j] > t[i][j-1] ){
                i--;
            }
            else{
                j--;
            }
        }
        
         
    }
     System.out.println(ans);
     return 0;   
    }
    
    // static int lcsHelperRecMem(int x, int y, String s1, String s2)
    // {
        
    //     if(x == 0 || y == 0){
    //          t[x][y] = 0; 
    //          return t[x][y] ;
    //     }
    //     if(t[x][y] != -1){
    //         return t[x][y];
    //     }
    //     else{
    //     if(s1.charAt(x-1) == s2.charAt(y-1) ){
    //         t[x][y] =  lcsHelper(x-1,y-1,s1,s2) + 1;
    //           return t[x][y] ;
    //     }
    //     else{
    //       t[x][y] =  Math.max(lcsHelper(x-1,y,s1,s2) , lcsHelper(x,y-1,s1,s2)); 
    //       return t[x][y] ;
    //     }
    //     }
        
        
    // }
    
     static int lcsHelperTtoD(int x, int y, String s1, String s2){
         
         for(int i = 0 ; i < t.length ; i++){
             for(int j = 0 ; j < t[0].length ; j++){
                 if(i == 0 || j == 0){
                     t[i][j] = 0;
                     continue;
                 }
                 
                 if(s1.charAt(i-1) == s2.charAt(j-1)){
                     t[i][j] = t[i-1][j-1] + 1;
                 }
                 else{
                     t[i][j] = Math.max(t[i-1][j] , t[i][j-1]);
                 }
                 
             }
            }
            return t[x][y];
         }
