import java.io.*;
import java.util.*;

public class Main {

  public static void queensPermutations(int qpsf, int tq, int row, int col, String asf, boolean[] queens) {
    // write your code here

    if(row == tq){
        if(qpsf == tq){
            System.out.println(asf);
            System.out.println();
        }
        
        return;
    }

    
    int nrow = 0 ;
    int ncol = 0;
    String sep = "";
    if(col == tq-1){
         ncol = 0;
         nrow = row + 1;
        
        sep = "\n";
    }
    else{
        nrow = row;
        ncol = col + 1 ;
        sep = "\t";
    }

    for (int i = 1 ; i <= tq ; i++ ) {
      if (queens[i - 1] == false) {
       

        queens[i - 1] = true;
        queensPermutations(qpsf+1, tq, nrow, ncol, asf + "q" + i + sep, queens);
        queens[i - 1] = false;

      }
    }
    
    
    
    queensPermutations(qpsf, tq, nrow, ncol, asf + "-" + sep, queens);



  }

  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    int n = Integer.parseInt(br.readLine());
    boolean[] queens = new boolean[n];

    queensPermutations(0, n, 0, 0, "", queens);
  }
}
