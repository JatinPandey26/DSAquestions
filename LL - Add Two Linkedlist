   public static ListNode reverse(ListNode node){
        ListNode prev = null;
        ListNode curr = node;
        
        
        while(curr != null){
            ListNode forw = curr.next;
            curr.next = prev;
            prev = curr;
            curr = forw;
            
        }
        
        return prev; 
        
    }

    public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null || l2 == null){
            return l1 == null ? l2 : l1;
        }
        
        ListNode c1 = reverse(l1);
        ListNode c2 = reverse(l2);
        ListNode res = new ListNode(-1);
        ListNode ptr = res;
        
        int carry = 0;
        while(c1 != null || c2 != null){
            
            int sum = (c1 != null ? c1.val : 0)  + (c2 != null ? c2.val : 0) + carry;
            
            
            
            int ld = sum % 10;
            carry = sum / 10;
            
            
            ptr.next = new ListNode(ld);
            ptr = ptr.next;
            
            if(c1 != null){c1 = c1.next;}
            if(c2 != null){c2 = c2.next;}
        }
        
        return reverse(res.next);
    }
