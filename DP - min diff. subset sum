
	public int minDifference(int arr[], int n) 
	{ 
	    // Your code goes here
	    int osum = 0;
	    for(int i : arr){
	        osum += i;
	    }
	    
	   int sum = osum/2;
	   //System.out.println(osum + "->" + sum);
	    
	     boolean[][] t = new boolean[n+1][sum+1];
	     subsetSum(n,arr,t,sum);
	   //  for(int i = 0 ; i < t.length ; i++){
	   //      for(int j = 0 ; j < t[0].length ; j++){
	   //          System.out.print(t[i][j] + " ");
	   //      }
	   //      System.out.println();
	   //  }
	     int part = 0;
	     int counterPart = 0;
	     for(int i = sum , j = n ; i >= 0 ; i--  ){
	         if(t[j][i] == true){
	             part = i;
	             counterPart = osum - i;
	             break;
	         }
	     }
	     
	     
	  return Math.abs(counterPart - part);   
	} 
	
	public static boolean subsetSum(int N , int[] arr, boolean[][]t , int sum ){
	       

      for(int i = 0 ; i < t.length ; i++){
          for(int j = 0 ; j < t[0].length ; j++ ){

              // initialization

              if(i == 0 && j== 0){
                t[i][j] = true;
              }
              else if(i==0){
                 t[i][j] = false; 
              }
               else if(j==0){
                 t[i][j] = true; 
              }


              // code

            else{  if(arr[i-1] <= j ){
                  t[i][j] = t[i-1][j-arr[i-1]] || t[i-1][j] ;
              }
              else{
                  t[i][j] =  t[i-1][j] ;
              }
              }

          }
      }

      return t[N][sum] ;
	}
	
	
