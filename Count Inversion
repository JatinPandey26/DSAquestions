 public static int mergeSort(int[] arr , int [] temp , int left , int right ){
        int inv_count = 0;
        
        if(left<right){
            int mid = left + (right-left)/2;
            inv_count += mergeSort(arr,temp,left,mid);
            inv_count += mergeSort(arr,temp,mid+1,right);
            inv_count += merge(arr,temp,left,mid+1,right);
        }
        return inv_count;
    }
    public static int merge(int[] arr, int [] temp , int left , int mid , int right ){
        
        int i = left ;
        int j = mid ;
        int k = left;
        int inv_count =0;
        
        while(i <= mid-1 && j <= right ){
            
            if(arr[i] <= arr[j] ){
                temp[k++] = arr[i++];
            }
            else{
                temp[k++] = arr[j++];
                inv_count += mid - i;
            }
            
        }
        while( i <= mid-1){
            temp[k++] = arr[i++];
        }
        while(j<= right){
            temp[k++] = arr[j++];
        }
        for(int p = left ; p <= right ; p++){
            arr[p] = temp[p];
        }
        return inv_count;
    }
