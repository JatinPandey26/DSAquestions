import java.io.*;
import java.util.*;

public class Main{
  

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String exp = br.readLine();

   Stack<Character> tors = new Stack<>();
   Stack<Integer> nds  = new Stack<>();
   
   for(int i = 0 ; i < exp.length() ; i++ ){
       char ch = exp.charAt(i);
       if(ch == '(' ){
          tors.push(ch);
          
       }
       else if(Character.isDigit(ch)){
            nds.push(ch - '0');
       }
       else if(ch == ')'){
           while(tors.peek() != '(' ){
               int v2 = nds.pop();
               int v1 = nds.pop();
               char oper = tors.pop();
               int res = operation(v1,v2,oper);
               nds.push(res);
           }
           tors.pop();
       }
       else if(ch == '+' || ch == '-'  || ch == '*' ||ch == '/' ){
           while(tors.size() > 0 && tors.peek() != '('&&  precedence(ch) <= precedence(tors.peek()) ){
                  int v2 = nds.pop();
               int v1 = nds.pop();
               char oper = tors.pop();
               int res = operation(v1,v2,oper);
               nds.push(res);
           }
           tors.push(ch);
           
       }
   }
   while(tors.size() > 0 ){
          int v2 = nds.pop();
               int v1 = nds.pop();
               char oper = tors.pop();
               int res = operation(v1,v2,oper);
               nds.push(res);
   }
   System.out.println(nds.pop());
   return;
   
 }
 public static int precedence(char ch){
     if(ch == '+'){
         return 1;
     }
     else  if(ch == '-'){
         return 1;
     }
     else  if(ch == '*'){
         return 2;
     }
     else {
         return 2;
     }
     
     
 }
 public static int operation(int v1 , int v2 , char ch ) {
       if(ch == '+'){
         return v1 + v2;
     }
     else  if(ch == '-'){
         return v1 - v2;
     }
     else  if(ch == '*'){
         return v1 * v2;
     }
     else {
         return v1 / v2;
     }
    
 }
}
