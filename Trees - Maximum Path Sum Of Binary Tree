  public static class pair{
      int NtoNMaxSum = Integer.MIN_VALUE;
      int RtoNMAxSum = Integer.MIN_VALUE;
  }
  
  public static pair maxPathSum_(TreeNode root) {
    
    pair ans = new pair();  
    
    if(root == null){
       return ans;
    }
    
    if(root.left == null && root.right == null){
         ans.RtoNMAxSum = root.val;
        return ans;
    }
    
    pair lp = maxPathSum_(root.left);
    pair rp = maxPathSum_(root.right);
    
    ans.NtoNMaxSum = Math.max(Math.max( Math.max(Math.max( lp.RtoNMAxSum , rp.RtoNMAxSum) , lp.RtoNMAxSum + rp.RtoNMAxSum) + root.val , lp.NtoNMaxSum),rp.NtoNMaxSum);
    
    ans.RtoNMAxSum = Math.max( lp.RtoNMAxSum , rp.RtoNMAxSum)  + root.val;
      
    return ans;
  }

  public static int maxPathSum(TreeNode root) {
    
    pair ans =  maxPathSum_(root); 
      
    return ans.NtoNMaxSum;
  }
