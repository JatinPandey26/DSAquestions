  static class pair{
        int a;
        int b;
        
        pair(int a , int b){
            this.a = a;
            this.b = b;
        }
    }
    public List<List<Integer>> kSmallestPairs(int[] arr1, int[] arr2, int k) {
      		
		
		PriorityQueue<pair> pq = new PriorityQueue<>((a,b)-> Integer.compare( b.a + b.b , a.a + a.b));
		
		for(int i = 0 ; i < arr1.length   ; i++){
          
		    for(int j = 0 ; j < arr2.length  ; j++){
		        pair p = new pair(arr1[i],arr2[j]);
		        
		        if(pq.size() < k){
		            pq.add(p);
		        }
		        else{
		            pair pk = pq.peek();
		            if(pk.a + pk.b > p.a + p.b){
		                pq.remove();
		                pq.add(p);
		            }
                    else{
                        break;
                    }
		        }
		        
		    }
		}
        List<List<Integer>> ans = new ArrayList<>();

		while(pq.size() > 0){
            List<Integer> clist = new ArrayList<>();
		    pair rem = pq.remove();
		    clist.add(rem.a);
            clist.add(rem.b);
            ans.add(0,clist);
		}
        return ans;
    }
