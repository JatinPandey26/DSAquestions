  public static int minDominoRotations(int[] top, int[] bottom) {
    int count1 = 0;
    int count2 = 0;
    int count3 = 0;
    int count4 = 0;
    int num1 = top[0];
    int num2 = bottom[0];

    for (int i = 0 ; i < top.length ; i++) {

      // top -> num1
      if (count1 != Integer.MAX_VALUE) {
        if (top[i] == num1) {
          // Already equal nothing to do
        }
        else if (bottom[i] == num1) {
          count1++;
        }
        else {
          count1 = Integer.MAX_VALUE;
        }
      }

      //top -> num2
      if (count2 != Integer.MAX_VALUE) {
        if (top[i] == num2) {
          // Already equal nothing to do
        }
        else if (bottom[i] == num2) {
          count2++;
        }
        else {
          count2 = Integer.MAX_VALUE;
        }
      }

      //bottom -> num1
      if (count3 != Integer.MAX_VALUE) {
        if (bottom[i] == num1) {
          // Already equal nothing to do
        }
        else if (top[i] == num1) {
          count3++;
        }
        else {
          count3 = Integer.MAX_VALUE;
        }
      }

      //bottom -> num2
      if (count4 != Integer.MAX_VALUE) {
        if (bottom[i] == num2) {
          // Already equal nothing to do
        }
        else if (top[i] == num2) {
          count4++;
        }
        else {
          count4 = Integer.MAX_VALUE;
        }
      }

    }

    int ans = Math.min(Math.min(count1, count2), Math.min(count3, count4));

    if (ans == Integer.MAX_VALUE) ans = -1;

    return ans;
  }
