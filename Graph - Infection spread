import java.io.*;
import java.util.*;

public class Main {
   static class Edge {
      int src;
      int nbr;

      Edge(int src, int nbr) {
         this.src = src;
         this.nbr = nbr;
      }
   }
   public static class Pair{
       int v;
       int time;
       
       Pair(int v ,int time){
           this.v = v;
           this.time = time;
       }
       
       
   }

   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

      int vtces = Integer.parseInt(br.readLine());
      ArrayList<Edge>[] graph = new ArrayList[vtces];
      for (int i = 0; i < vtces; i++) {
         graph[i] = new ArrayList<>();
      }

      int edges = Integer.parseInt(br.readLine());
      for (int i = 0; i < edges; i++) {
         String[] parts = br.readLine().split(" ");
         int v1 = Integer.parseInt(parts[0]);
         int v2 = Integer.parseInt(parts[1]);
         graph[v1].add(new Edge(v1, v2));
         graph[v2].add(new Edge(v2, v1));
      }

      int src = Integer.parseInt(br.readLine());
      int t = Integer.parseInt(br.readLine());
      
      // write your code here
      boolean [] visited = new boolean[vtces];
      Queue<Pair> que = new ArrayDeque<>();
      que.add(new Pair(src,1));
      int count = 0;
      while(que.size()  > 0){
        Pair top = que.remove();
        if(top.time > t){
            break;
        }
        if(visited[top.v] == true){
            continue;
        }
        
        visited[top.v] = true;
        count++;
        
        for(Edge edge : graph[top.v] ){
            if(visited[edge.nbr] == false){
              que.add(new Pair(edge.nbr,top.time+1));
            }
        }
        
      }
      System.out.println(count);
   }

}
