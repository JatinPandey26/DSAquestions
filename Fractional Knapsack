import java.io.*;
import java.util.*;




public class Main {
   
   static class Item{
        double cost ;
    double value , weight , idx;
    Item(double  x , double  y , double idx  ){
        this.value = x;
        this.weight = y;
        this.idx = idx;
       
    }
}
    

public static double fraction_knapsack (int[] weight , int[] rates , int tar ){
    
    Item[] iVal = new Item[rates.length];
    
    for(int i = 0 ; i < rates.length ; i++){
        iVal[i] = new Item(rates[i] , weight[i] , i ); 
    }
    
    Arrays.sort(iVal, new Comparator<Item>() {
            @Override
            public int compare(Item a, Item b)
            {
               double r1 = (double) a.value / (double) a.weight;
        double r2 = (double) b.value / (double) b.weight;
        
        if(r1 < r2){
            return 1;
        }
        else if(r1>r2){
            return -1;
        }
        else{
            return 0;
        }
            }
        });
        double final_value = 0;

        for( Item item : iVal ){
            int item_w = (int)item.weight;
            int item_r = (int)item.value;
            
            if(item_w <= tar  ){
                final_value += item_r;
                tar -= item_w;
            }
            else{
                double fraction = (double)item_r/(double)item_w ;
                final_value += fraction * (double)tar;
                break;
            }
        }
        
        return final_value;
}


    public static void main(String[] args) throws Exception {
  Scanner sn = new Scanner(System.in);
     int n = sn.nextInt();
     int[] rate = new int[n];
     int[] weight = new int[n];
     for(int i = 0 ; i < n ; i++){
         rate[i] = sn.nextInt();
     }
     for(int i = 0 ; i < n ; i++){
         weight[i] = sn.nextInt();
     }
     int tar = sn.nextInt();
     System.out.println(fraction_knapsack(weight , rate , tar) );
    }
    
}
