import java.io.*;
import java.util.*;

public class Main {

//   public static void solution(String str, int minRemoval, HashSet<String> ans) {
//     //write your code here


//     if (minRemoval == 0) {
//       if (getMin(str) == 0 ) {
//         if (ans.contains(str) == false) {
//           System.out.println(str);
//           ans.add(str);
         
//         }
//       }
//       return;
//     }


//     for (int i = 0 ; i < str.length() ; i++ ) {
//       String left = str.substring(0, i);
//       String right = str.substring(i + 1);

//       solution(left + right, minRemoval - 1, ans );

//     }

//   }

  public static void solution(String str, int idx , int minRemoval, HashSet<String> ans, String asf ) {
      
      if(str.length() == idx){
          if(getMin(asf) == 0 && ans.contains(asf) == false && minRemoval == 0  ){
              System.out.println(asf);
              ans.add(asf);
              
          }
          return;
      }
      
     char ch = str.charAt(idx);
     
     solution(str , idx + 1 , minRemoval-1 , ans , asf );
     solution(str , idx + 1 , minRemoval , ans , asf + ch ); 
      
  }

  public static int getMin(String str) {
    //write your code here
    Stack<Character> st = new Stack<>();
    int i = 0 ;
    while (i < str.length() ) {
      if (st.size() == 0) {
        st.push(str.charAt(i));
      }
      else if (str.charAt(i) == ')') {
        if (st.peek() == '(' ) {
          st.pop();
        }
        else {
          st.push(str.charAt(i));
        }

      }
      else {
        st.push(str.charAt(i));
      }

      i++;
    }
    return st.size();
  }
  public static void main(String[] args) {
    Scanner scn = new Scanner(System.in);
    String str = scn.next();
    // solution(str, getMin(str), new HashSet<>());
    solution(str,0, getMin(str), new HashSet<>() , "");
  }

}
